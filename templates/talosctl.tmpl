#!/bin/bash
#talosctl gen config talos-ha-cilium https://${load_balancer}:6443  --config-patch @cni.yaml
talosctl gen config talos-ha-cilium https://${load_balancer}:6443
sleep 10
sed -i "" "s/# allowSchedulingOnControlPlanes/allowSchedulingOnControlPlanes/g" controlplane.yaml
sleep 10

%{ for node_host in node_map_masters ~}
talosctl apply-config --insecure --nodes ${node_host} --file controlplane.yaml
echo "Applied controller config to ${node_host}"
%{endfor}
%{ for node_host in node_map_workers ~}
talosctl apply-config --insecure --nodes ${node_host} --file worker.yaml
echo "Applied worker config to ${node_host}"
%{endfor}

# Bootstrap
sleep 30
talosctl bootstrap --nodes ${primary_controller} -e ${primary_controller} --talosconfig=./talosconfig
echo "Started bootstrap process"
sleep 30

# Update kubeconfig
echo "Updated kubeconfig"
talosctl kubeconfig $HOME/.kube/talos-ha-cilium-config --nodes ${primary_controller} -e ${primary_controller} --talosconfig=./talosconfig --force


# Health check
n=0
retries=5
until [ "$n" -ge "$retries" ]; do
  if talosctl --talosconfig=./talosconfig --nodes ${primary_controller} -e ${primary_controller} health; then
    break
  else
    n=$((n+1))
    sleep 5
  fi
done


export KUBECONFIG=$HOME/.kube/talos-ha-cilium-config
kubectl config current-
echo "start create namespace"
kubectl apply -f k8s/namespace.yaml
echo "start install cilium"
./cilium.sh
echo "start install metrics-server"
kubectl apply -f k8s/metrics-server
echo "Successfully created cluster"